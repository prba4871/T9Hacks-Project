#installing the required libraries

!pip install transformers torch google-cloud-vision pdf2image
!apt-get install -y poppler-utils

#import libraries
from pdf2image import convert_from_path
from google.cloud import vision
import io
import os
from transformers import pipeline
#the pdf medical report path
pdf_path = "/content/Medical Reports.pdf"

#function that converts pdf information into summary
def sumdr (pdf_path):
  #converts pdf pages to images
  image_pages = convert_from_path (pdf_path)
  #google private key API
  os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = "/content/dauntless-ember-451005-p2-fc46e432ae31.json"
  #initializes google cloud API
  client = vision.ImageAnnotatorClient()

  # extracts text from the images (i.e) pdf pages
  def extract_text (image_pages):
    image_memory_buffer = io.BytesIO()
    image.save(image_memory_buffer,format = 'JPEG')
    image_byte_data = image_memory_buffer.getvalue()
    image_pages = vision.Image(content = image_byte_data)
    response_text = client.text_detection (image = image_pages)

    if response_text.error.message:
      raise Exception (f"Error : {response_text.error.message}")

    return response_text.text_annotations[0].description if response_text.text_annotations else ""
  # a list that is supposedly going to contain all text of the pdf seggerated with pages
  full_text_list =[]

  #for loop to extract text from the images and append to full_text_list
  for i,image in enumerate(image_pages):
    page_text = extract_text(image)
    full_text_list.append(f"page number {i+1} \n {page_text}")

  #prints the text of each page
  for page in full_text_list:
    print("this is page:",page)

  #defining the hugging face summarizer
  summarizer = pipeline ("summarization")
  smdr=[]
  #for loop to create summaries of each page and print them
  for i,pages in enumerate(full_text_list):
    try:
      summary = summarizer(pages, max_length = 500, min_length = 0, do_sample=False)
      print(f"summary of page {i+1} is \n", summary[0]['summary_text'])
      smdr.append(summary[0]['summary_text'])
    except Exception as e:
      print(f"summarization failed for page {i+1}: {e}")
      smdr(f"summarization failed for page {i+1}: {e}")
  return smdr

print(sumdr(pdf_path))
